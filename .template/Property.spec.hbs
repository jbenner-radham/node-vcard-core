import { expect } from 'chai';
import {{{capitalize property}}}Property from '../../lib/properties/{{{capitalize property}}}Property';

describe('{{{capitalize property}}}Property', () => {
    it('is a function class', () => {
        expect({{{capitalize property}}}Property).to.be.a('function');
    });

    describe('#toString()', () => {
        it('is a method', () => {
            expect({{{capitalize property}}}Property.prototype.toString).to.be.a('function');
        });

        it('returns a string', () => {
            const {{{lowerCase property}}} = new {{{capitalize property}}}Property('...');

            expect({{{lowerCase property}}}.toString()).to.be.a('string');
        });

        it('returns the proper string format', () => {
            const value = '...';
            const {{{lowerCase property}}} = new {{{capitalize property}}}Property(value);

            expect({{{lowerCase property}}}.toString()).to.equal(`{{{upperCase property}}}:${value}`);
        });
    });

    describe('#valueOf()', () => {
        it('is a method', () => {
            expect({{{capitalize property}}}Property.prototype.valueOf).to.be.a('function');
        });

        it('returns a string', () => {
            const {{{lowerCase property}}} = new {{{capitalize property}}}Property('...');

            expect({{{lowerCase property}}}.valueOf()).to.be.a('string');
        });

        it('returns the same value passed to it', () => {
            const value = '...';
            const {{{lowerCase property}}} = new {{{capitalize property}}}Property(value);

            expect({{{lowerCase property}}}.valueOf()).to.equal(value);
        });
    });
});
